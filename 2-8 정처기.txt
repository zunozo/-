UML(Unified Modeling Language)
가시성, 명세화, 문서화
기본 구성요소
사물(Thing)
구조, 행위, 그룹, 주석
관계(Realtionship)
다이어그램(Diagram)

행위 다이어그램
유상활통상타시
유스케이스
상태
활동
통신
상호 작용
타이밍
시퀀스

GoF 디자인 패턴
생성, 구조, 행위 3가지로 분류
디자인패턴의 구성요소
패턴의 이름과 구분, 문제 및 배경, 솔루션, 사례, 결과, 샘플 코드

생성패턴
객체를 생성하는데 사용되는 패턴

Abstract Factory, Factory Method 비교
Factory Method는 하나의 메소드가 여러 종류의 객체를 생성하는 것이고,
객체를 생성하기 위한 인터페이스를 정의하여 어떤 클래스가 인스턴스화 될 것 인지는 서브 클래스가 결정하도록 하는 것.

Abstract Factory는 같은 종류의 여러 개의 객체를 생성할 수 있는 클래스를 생성하는 것.

구조패턴
여러 개의 객체를 모아 구조화시키는 패턴

행위패턴
객체의 구체적인 알고리즘을 정의하는 패턴

private : 정의한 곳에서만
protected : 상속된 클래스까지
public : 어디서든

추상클래스는 new를 사용할 수 없다.
