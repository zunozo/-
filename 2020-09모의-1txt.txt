2020 9월 모의
정적 static, 동적 Dynamic
럼바우 분석기법
객체(object)모델링, 동적(Dynamic)모델링, 기능(Functional)모델링

럼바우 객체지향 분석 기법
동적모델링
유(Usecase)
상(State
활(act
통(commu
상(interaction
타(timing
시(sequence

CASE(Computer Aided Software Engineering)
CASE는 소프트웨어를 개발하는 시점부터 요구분석, 설계, 개발, 유지보수에 이르기까지 소프트웨어의 생명주기 전반을 지원하는 프로그램 또는 소프트웨어 개발을 지원하는 자동화 도구 혹은 방법론의 결합.
언어번역 X, CASE 툴 간의 호환성이없음.

캡슐화
구조적 설계에서 모듈화와 같은 의미로 객체를 정의할 때 연관된 속성과 방법을 한 테두리로 묶는 것을 말한다.
정보은폐 : 캡슐화된 객체 내부에 속성이나 메소드의 기능이 외부에 영향을 받거나 주지 않도록 설계하는 방법

객체지향 설계의 원칙
단일 책임의 원칙(Single Responsibility P) : 객체는 하나의 책임만 맡아 처리할 수 있게 해야 함
개방 폐쇄의 원칙(Open-Closed P) : 소프트웨어 개체는 확장에는 열고, 수정 시에는 닫혀있게 해야 함
리스코프 치환의 원칙(Liskov Substitution P) : 서브 타입은 어디에서나 자신의 기반 타입으로 교체할 수 있어야 함.
인터페이스 분리의 법칙(Interface Segregation P) : 한개의 일반적인 인터페이스보다 구체적이고 안전한 여러 개의 인터페이스가 좋다.
의존성 뒤집기의 원칙(Dependency Inversion P) : 추상화 클래스에 의존하게함.

순차 코드 : 일정한 일련번호 부여
블록 코드
10진 코드 : 10진으로 계속 분류
그룹 분류 코드
연상 코드
표의 숫자 코드 : 코드화 대상 항목의 중량, 면적, 용량 등의 물리적 수치를 이용하여 만든 코드
합성 코드 : 2개이상의 코드를 조합하여 만든 코드

구조적 분석의 도구
DFD, DD, 소단위명세서

DFD : 자료흐름 그래프 또는 버블 차트라고도 한다.
구조적분석 기법에 이용된다.
자료의 흐름을 명확히 알 수 있지만, 시간흐름은 알 수 없다.

UML의 기본 구성요소 : Things(사물), Realtionship(관계), Diagram(다이어그램)

소프트웨어의 상위설계 : 시스템 아키텍처 설계
시스템 아키텍처 설계는 소프트웨어 아키텍처의 결정을 제약함
소프트웨어 아키텍처 설계(소프트웨어 설계)는 소프트웨어 상세 결정을 제약함

자료사전
[] : 선택
{} : 반복
() : 생략
+ : 나열
= : 정의

인터페이스 개발시스템이 가져야 할 기능
사용자 명령을 받아들일 프롬프트 기능, 사용자 명령 입력의 검증 기능, 에러 처리와 에러 메시지 처리 기능, 도움말 지원 기능.
소스코드 분석 및 오류 복구는 디버깅을 통해서한다..(이걸왜틀렸냐..)

요구사항 명세기법
비정형 명세기법 : 사용자의 요구를 ㅍ효ㅕㄴ할 때 자연어를 기반으로 서술한다. 이해가 용이하다.
정형 명세기법 : 사용자의 요구를 표현할 때 수학적인 원리와 표기법을 이용하여 서술한다. 요구 특성을 정확하게 표현할 수 있다. 명세서가 간결하고, 명세와 구현이 일치된다.

요구사항 개발 프로세스
도출 -> 분석 -> 명세 -> 확인
분석 : 개발 비용과 일정에 대한 제약 기타 등등..
명세 : 파악된 요구사항을 체계적으로 검토, 평가하고 승인될 수 있는 문서를 작성.

애자일 방법론
Xp, 스크럼, 린, FDD(Featrue-Driven development)
FDD : 기능 개발 중심으로 설계 및 구축 기능에 중점을 두는 방식.

클라이언트와 서버간의 통신을 담당하는 시스템 소프트웨어 : 미들웨어

GOF  : 생성(Creational) 패턴, 구조(Structural) 패턴, 행위(Behavioral) 패턴