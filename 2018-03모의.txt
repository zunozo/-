8, 
점수 BETWEEN 90 AND 95 ==
점수 >= 90 AND 점수 <= 95

Atomicity : 트랜젝션은 분해가 불가능한 최소의 단위인 하나의 원자처럼 동작. 트랜젝션 내의 모든 연산들을 반드시 한꺼번에 완전하게 전체가 정상적으로 수행이 완료되거나, 아니면 어떠한 연산도 수행되지 않은 all or nothing
Consistency : 트랜젝션 작업이 시작되기 전에 데이터베이스 상태가 일관된 상태였다면 트랜젝션 작업이 종료된 후에도 일관성 있는 데이터베이스 상태를 유지해야한다.
Isolation : 트랜젝션 작업 수행중에는 다른 트랜젝션에 영향을 주어서도 안되고, 다른 트랜젝션들에 의해 간섭을 받아서도 안된다는 것을 의미. 다른 트랜젝션의 영향을 받게 되면 영향을 주는 트랜젝션에 의해 자신의 동작이 달라 질 수 있기 때문에, 트랜젝션 자신은 고립된 상태에서 수행되어야 한다는 것을 의미.
Durability : 일련의 데이터 조작을 완료하고 완료 통지를 사용자가 받는 시점에서 그 조작이 영구적이 되어 그 결과를 잃지 안흔 것.

NOSQL : 데이터 중복이 생기더라도 테이블을 정규화 시키지 않아도 큰 테이블에 담아 저장

페이징
페이지 크기가 작아질수록 발생하는 현상
더많은 페이지 사상표가 필요하여 기억 공간이 낭비됨
내부 단편화크기는 줄어들게 됨
꼭 필요한 내용만 사용하므로 유용도가 좋아짐
페이지 부재가 증가함

스레싱 : 동시에 여러 개의 작업이 수행되는 다중 프로그래밍 시스템 또는 가상 기억 장치를 사용하는 시스템에서 하나의 프로세스가 작업 수행 과정 중 지나치게 페이지 부재가 발생함으로 인하여 전체 시스템의 성능이 저하되는 현상

프로세스의 상태전이
dispatch : 준비 상태에서 대기하고 있는 프로세스 중 하나가 CPU를 할당받아 실행 상태로 변하는 시점.

자원관리
상태 파악 -> 정책 수립 -> 정책 수행 -> 자원 회수

NUR(Not Used Recenlty) : 최근에 사용하지도 호출되지도 않은 페이지를 제거
변형비트, 참조비트필요해짐

세마포어 여러개의 프로세스의 동기화 Wait Signal
모니터 하나의 프로세스의 동기화 Wait Signal

소프트웨어 개발 영역을 결정하는 요소
소프트웨어에 의해 간접적으로 제어되는 장치와 소프트웨어를 실행하는 하드웨어
기존의 소프트웨어와 새로운 소프트웨어를 연결하는 소프트웨어
순서적 연산에 의해 소프트웨어를 실행하는 절차 : 인터페이스

비교 테스트(블랙박스테스트) : 여러 버전의 프로그램에 동일한 자료를 제공하여 동일한 결과가 출력되는 검사하는 기법

유지보수의 종류 중 소프트웨어 테스팅 동안 밝혀지지 않은 모든 잠재적인 오류를 수정하기 위한 보수 형태로서 오류의 수정과 진단과정이 포함되는 것 : Corrective maintenance

위험 모니터링 : 위험 요소 징후들에 대하여 계속적으로 인지하는 것

Rayleigh-Norden 곡선과 Putnam의 예측모델의 자동화 예측 도구 : SLIM

유지보수의 활동 종류
Adaptive Maintenance
Perfective Maintenace
Preventive Maintenance

Software Project의 비용결정요소와 가장 관련이 적은것 : 하드웨어의 성능

전송 계층 : 흐름제어, 오류제어, 데이터분할과 재조립

Stop-and-wait ARQ 기다림
Selective-Repeat ARQ 오류가 발생한 프레임 만 재전송
Go-Back-N ARQ 오류가 발생한 프레임 이후로 모두재전송
